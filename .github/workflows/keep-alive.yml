name: keep-render-awake
on:
  schedule:
    # Run every 10 minutes, 24/7
    - cron: "*/10 * * * *"
  workflow_dispatch:

jobs:
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: Keep Render Service Alive 24/7
        run: |
          # Get current IST time for logging
          IST_HOUR=$(TZ='Asia/Kolkata' date +%H)
          IST_MIN=$(TZ='Asia/Kolkata' date +%M)
          IST_TIME=$(printf "%02d%02d" $IST_HOUR $IST_MIN)
          
          echo "üïê Current IST time: ${IST_HOUR}:${IST_MIN} (${IST_TIME})"
          echo "üöÄ Pinging Render service continuously..."
          
          # Hardcoded route - replace with your specific endpoint
          SERVICE_URL="https://fyers-volume-spike-detector.onrender.com/health"
          
          # Try pinging the service up to 3 times
          for i in {1..3}; do
            echo "Attempt $i..."
            echo "Pinging: $SERVICE_URL"
            
            # Use different curl approach - check HTTP status code explicitly
            HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" --max-time 15 \
                         -H "User-Agent: GitHub-Actions-Keep-Alive-24x7" \
                         "$SERVICE_URL")
            
            echo "HTTP Status Code: $HTTP_STATUS"
            
            if [[ "$HTTP_STATUS" == "200" ]]; then
              echo "‚úÖ Health check successful on attempt $i (HTTP 200)"
              echo "üìä Service is alive and responding"
              exit 0
            else
              echo "‚ö†Ô∏è Attempt $i failed with HTTP status: $HTTP_STATUS"
            fi
            sleep 5
          done
          
          echo "‚ùå All health check attempts failed"
          echo "üîç Service responded but not with HTTP 200"
          echo "üåê Check if URL is accessible: $SERVICE_URL"
          exit 1
